{"version":3,"sources":["./src/service/register.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app.module.ts","./src/service/login.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RegisterModel } from 'src/app/signup/signup.component';\n\nconst URL:any=\"https://localhost:44334/api/Auth/Register\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  \n  constructor(private http:HttpClient) { }\n  Create(data:RegisterModel) : Observable<any>\n  {\n    return this.http.post<RegisterModel>(URL,data);\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport {RouterOutlet} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PrinterService';\n  searchTerm!: string;\n \n  onSearchClicked(searchTerm: string) {\n    this.searchTerm = searchTerm;\n  }\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin works!</p>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route, Routes } from '@angular/router';\nimport { RouterOutlet} from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\nimport { RegisterModel, SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { LoginService } from 'src/service/login.service';\nimport { RegisterService } from 'src/service/register.service';\nimport { AdminComponent } from './admin/admin.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n//import { RegisterComponent } from './register/register.component'\n\n\nconst routes: Routes = [\n  {path:'',redirectTo:'user/login',pathMatch:'full'},\n  { path: 'user/login', component:LoginComponent},\n  { path: 'logout', component: LoginComponent },\n  { path: 'user/signup', component:SignupComponent},\n  { path : 'admin', component :AdminComponent }\n  \n  ];\n@NgModule({\n  declarations: [\n    AppComponent,\n    \n    SignupComponent,\n    LoginComponent,\n    AdminComponent,\n    //RegisterComponent\n    \n    \n    \n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(routes),\n    ReactiveFormsModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),\n    BrowserAnimationsModule\n\n  \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable } from 'rxjs';\nimport { LoginModel } from 'src/app/login/login.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private readonly  URL:string=\"https://localhost:44334/api/Auth/Token\";\n  jwtHelperService = new JwtHelperService();\n  constructor(private http:HttpClient) { }\n\n  Create(data:LoginModel) : Observable<LoginModel>\n  {\n    return this.http.post<LoginModel>(this.URL,data);\n  }\n  settoken(token:string){\n\n     localStorage.setItem(\"access token\",token)\n    \n     var role =this.loadcurrentuser();\n    \n     return role;\n    \n     }\n    \n    loadcurrentuser(){\n    \n     const token=localStorage.getItem(\"access token\");\n    \n     const userInfo =token!=null? this.jwtHelperService.decodeToken(token):null;\n    \n     console.log(userInfo);\n    \n     var str = JSON.stringify(userInfo);\n    \n    var j= JSON.parse(str)\n    \n    var role= j.role\n    \n    return role;\n    \n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { RegisterService } from 'src/service/register.service';\n\nexport class RegisterModel {\n  Email!: string;\n  UserName!: string;\n  Password!: string;\n  MobileNumber: any;\n  UserRole!: string;\n}\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  registerForm!: FormGroup;\n\n\n  constructor(private formBuilder: FormBuilder, public registerservice: RegisterService, private toastr : ToastrService) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      UserName: ['', Validators.required],\n      Email: ['', Validators.required],\n      Password: ['', Validators.required],\n      MobileNumber: ['', Validators.required],\n      UserRole: ['', Validators.required]\n\n    });\n  }\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      this.registerservice.Create(this.registerForm.value).subscribe(res=>{console.log(res)}); \n      this.toastr.success(\"Registration Successfully !!!\");\n      this.registerForm.reset(); \n      \n    } else {\n      //alert('Form should not be null');\n      this.toastr.error(\"Error \");\n    }    \n  }\n}\n\n","<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\">\n<div class=\"container\">\n    <div class=\"row\">\n    <div class=\"col-md-6 mx-auto\">\n    <h2 class=\"text-center mb-4\">Register</h2>\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n  \n    <label for=\"useradmin\">Enter User/Admin:</label>\n  <select class=\"form-control\" formControlName=\"UserRole\" ngClass=\"{'is-invalid':submitted&&registerForm.controls.userrole.errors}\" id=\"user\" name=\"user\" required>\n    <option value=\"user\">User</option>\n    <option value=\"admin\">Admin</option>\n  </select>\n    </div>\n    <div class=\"form-group\">\n    <label for=\"email\">Email address</label>\n    <input  type=\"email\" class=\"form-control\" formControlName=\"Email\" id=\"email\" placeholder=\"Enter email\" required>\n    </div>\n    <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" class=\"form-control\" formControlName=\"UserName\" id=\"username\" placeholder=\"Enter Username\" required>  \n    </div>\n    <div class=\"form-group\">\n        <label for=\"mobilenumber\">MobileNumber</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"MobileNumber\" id=\"mobileNumber\" placeholder=\"Enter Mobilenumber\" required>\n        </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" formControlName=\"Password\" id=\"password\" placeholder=\"Password\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Confirm Password</label>\n            <input type=\"password\" class=\"form-control\" formControlName=\"Password\" id=\"ConfirmPassword\" placeholder=\"Confirm Password\" required>\n        </div>\n    <button id=\"submitButton\" type=\"submit\" class=\"btn btn-primary\" >Register </button>\n    <p>Already User? <a id=\"siginLink\" routerLink=\"/user/login\">Login</a></p>\n    </form>\n    </div>\n    </div>\n    </div>","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\nimport { LoginService } from 'src/service/login.service';\nimport { Route, Router } from '@angular/router';\n//import { from } from 'rxjs';\nexport class LoginModel {\n  email !: string;\n  password !: string;\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent \n{\n\n  login: LoginModel = new LoginModel();\n  constructor(private loginservice: LoginService, private router : Router) { }\n  onSubmit(userForm: NgForm) {\n\n     if(!userForm.valid)\n    \n     {\n    \n     alert(\"enter valid email address\");\n    \n     }\n    \n     if (userForm.valid) {\n     console.log(userForm.value);\n    \n     this.loginservice.Create(userForm.value).subscribe(res => {\n    \n    // console.log(res);\n    \n   var str= JSON.stringify(res)\n    \n    // console.log(str);\n    \n    var r= JSON.parse(str)\n    \n    if(r.errorMessage=='No user found with username'){\n    \n    alert(\"no such user found\");\n    \n    userForm.resetForm();\n    \n     }\n    \n     else{\n    \n    var role= this.loginservice.settoken(r.message)\n    \n    //alert(\"login successful\");\n    \n    role= role.toLowerCase();\n    \n    if(role == \"admin\"){\n    \n     this.router.navigateByUrl('admin');\n    \n  }\n    \n    else{\n    \n   this.router.navigateByUrl('loanapplicant'); \n   }\n    userForm.resetForm();\n     }\n     });\n     }\n    }\n    }","\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\">\n<div class=\"container\">\n    <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-md-4\">\n    <div class=\"card\">\n    <div class=\"card-header text-center\">\n    <h4>Login</h4>\n    </div>\n    <div class=\"card-body\">\n\n        <form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit(userForm)\">\n\n    <div class=\"form-group\">\n    <label for=\"Email\">Email </label>\n    <input [(ngModel)] = \"login.email\" name=\"email\" type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\">\n    </div>\n    <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input [(ngModel)] = \"login.password\" name=\"password\"  type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter password\">\n    </div>\n   <!--<div class=\"form-group form-check\">\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberMe\">\n    <label class=\"form-check-label\" for=\"rememberMe\">Remember Me</label>\n    </div>-->\n    <button type=\"submit\" class=\"btn btn-primary btn-block\" id=\"loginButton\" >Login</button>\n    </form>\n    <p>New User/admin?<a routerLink=\"/user/signup\" id=\"signupLink\">Sign Up</a></p>\n    </div>\n    </div>\n    </div>\n    </div>\n    </div>\n   \n  \n  ","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}